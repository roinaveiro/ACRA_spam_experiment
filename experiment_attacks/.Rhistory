id = diag(length(x))
result = diag(length(x))
for(i in 1:length(x)){
result[i,] = id[i,] | x
}
result
add1 <- function(x){
id = diag(length(x))
result = diag(length(x))
for(i in 1:length(x)){
result[i,] = id[i,] | x
}
return(result)
}
add1(0,0,0)
add1(c(0,0,0))
pp = add1(c(0,0,0))
unique(pp)
dim(pp)
3**2
rbind(diag(2), diag(2))
x = c(0,0,0)
mat1 = add1(x)
mat2 = add1(mat1[1,])
mat2
add1 <- function(x){
id = diag(length(x))
result = diag(length(x))
for(i in 1:length(x)){
result[i,] = id[i,] | x
}
return(result)
}
x = c(0,0,0)
mat1 = add1(x)
mat2 = add1(mat1[1,])
for i in 2:dim(mat1)[1]:
mat2 = rbin(mat2, add1(mat1[i,]) )
add1 <- function(x){
id = diag(length(x))
result = diag(length(x))
for(i in 1:length(x)){
result[i,] = id[i,] | x
}
return(result)
}
x = c(0,0,0)
mat1 = add1(x)
mat2 = add1(mat1[1,])
for i in 2:dim(mat1)[1]:
mat2 = rbind(mat2, add1(mat1[i,]) )
add1 <- function(x){
id = diag(length(x))
result = diag(length(x))
for(i in 1:length(x)){
result[i,] = id[i,] | x
}
return(result)
}
x = c(0,0,0)
mat1 = add1(x)
mat2 = add1(mat1[1,])
for(i in 2:dim(mat1)[1]){
mat2 = rbind(mat2, add1(mat1[i,]) )
}
mat2
add1 <- function(x){
id = diag(length(x))
result = diag(length(x))
for(i in 1:length(x)){
result[i,] = id[i,] | x
}
return(result)
}
x = c(0,0,0)
mat1 = add1(x)
mat2 = add1(mat1[1,])
for(i in 2:dim(mat1)[1]){
mat2 = rbind(mat2, add1(mat1[i,]) )
}
mat2 = unique(mat2)
mat2
rbind(mat2, c(0,0,0))
add1 <- function(x){
id = diag(length(x))
result = diag(length(x))
for(i in 1:length(x)){
result[i,] = id[i,] | x
}
return(result)
}
add2 <- function(x){
mat1 = add1(x)
mat2 = add1(mat1[1,])
for(i in 2:dim(mat1)[1]){
mat2 = rbind(mat2, add1(mat1[i,]) )
}
mat2 = unique(mat2)
mat2 = rbind(mat2, x)
return(mat2)
}
add2(c(1,1,1))
add1 <- function(x){
id = diag(length(x))
result = diag(length(x))
for(i in 1:length(x)){
result[i,] = id[i,] | x
}
return(result)
}
add2 <- function(x){
mat1 = add1(x)
mat2 = add1(mat1[1,])
for(i in 2:dim(mat1)[1]){
mat2 = rbind(mat2, add1(mat1[i,]) )
}
mat2 = rbind(mat2, x)
mat2 = unique(mat2)
return(mat2)
}
add2(c(1,1,1))
add2(c(1,1,0))
add2(c(1,0,0))
aa = add2(c(1,0,0))
aa
as.data.frame(aa)
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
readRDS(file = "data/jags1.rds")
jags.out = readRDS(file = "data/jags1.rds")
test_matrix = model.matrix( spam ~ ., test)
predict_lr(test_matrix, jags.out, nsamp)
test
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
pr = test$probability
test$probability <- NULL
jags.out = readRDS(file = "data/jags1.rds")
test_matrix = model.matrix( spam ~ ., test)
predict_lr(test_matrix, jags.out, nsamp)
pr
predict_lr(test_matrix, jags.out, 10000)
pp = predict_lr(test_matrix, jags.out, 10000)
res = pp > 0.5
res
mean(res == test$spam)
test[1,]
test_matrix
test[1,]
add1(test[1,])
new_test = add1(test[1,-55])
new_test
model.matrix(new_test)
model.matrix(.,new_test)
colnames(test)
new_test = add1(test[1,])
colnames(new_test) = colnames(test)
model.matrix(spam ~ .,new_test)
new_test
new_test = add2(test[1,])
new_test = add2(test[1,-55])
test[1,-55]
vector(test[1,-55])
as.vector(test[1,-55])
add2(test[1,-55])
add1(test[1,-55])
add2(test[1,-55])
new_test = add2(test[1,-55])
test[1,-55]
as.numeric(test[1,-55])
new_test = add2(as.numeric(test[1,-55]))
new_test
dim(new_test)
colnames(test)[-55]
colnames(new_test) = colnames(test)[-55]
new_test
model.matrix(spam ~ .,new_test)
new_test$spam = test$spam
model.matrix(~,new_test)
model.matrix(~.,new_test)
att_test_matrix <-model.matrix(~.,new_test)
predict_lr(att_test_matrix, jags.out, 10000)
test$spam
x = as.numeric(test[1,-55])
new_test = add2(x)
colnames(new_test) = colnames(test)[-55]
att_test_matrix <-model.matrix(~.,new_test)
new_test
new_test - x
x = as.numeric(test[1,-55])
x = c(1,0,1)
x
add1(x)
add2(x)
new = add2(x)
new - x
x
x - new
new = add1(x)
new
new - x
x
x
new - t(x)
t(new, 1, function(z) z-x))
t(new, 1, function(z) z-x)
x
nwq
new
t( apply(new, 1, function(z) z-x) )
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
pr = test$probability
test$probability <- NULL
jags.out = readRDS(file = "data/jags1.rds")
test_matrix = model.matrix( spam ~ ., test)
x = as.numeric(test[1,-55])
new_test = add2(x)
t( apply(new, 1, function(z) z-x) )
t( apply(new_test, 1, function(z) z-x) )
rowSums(t( apply(new_test, 1, function(z) z-x) ))
rep(1,3)
advut <- function(yc, y, a){
d = length(a)
if((y==1) & (yc==1)){
Y = rep(-5.0, d)
}
return(Y)
}
advut(1,1, c(2,2,2))
a = advut(1,1, c(2,2,2))
b = c(2,2,2)
b*a
exp(a)
advut <- function(yc, y, a){
d = length(a)
if((y==1) & (yc==1)){
Y = rep(-5.0, d)
}
else{
if((y==1) & (yc==0)){
Y = rep(5.0, d)
}
else{
Y = rep(0.0, d)
}
}
B = a*rep(0.5, d)
rho = rep(0.5, d)
return (exp( rho * (Y - B) ))
}
d = c(0,1,1)
a = c(0,1,1)
advut(1,1,a)
advut(1,0,a)
advut(0,0,a)
advut(0,1,a)
distances
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
pr = test$probability
test$probability <- NULL
jags.out = readRDS(file = "data/jags1.rds")
x = as.numeric(test[1,-55])
new_test = add2(x)
distances <- rowSums(t( apply(new_test, 1, function(z) z-x) ))
distances
length(distances)
new_test <- as.data.frame(new_test)
colnames(new_test) <- colnames(test)[-55]
att_test_matrix <- model.matrix(~.,new_test)
probs <- predict_lr(att_test_matrix, jags.out, 10000)
probs
advut(1,1,distances)
utilities <- probs * advut(1,1,distances) + (1.0 - probs)* advut(0,1,distances)
utilities
argmax(utilities)
which.max(utilities)
which.max(utilities)
new_test
new_test[which.max(utilities),]
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
test = read.csv("data/test1.csv")
test$probability <- NULL
jags.out = readRDS(file = "data/jags1.rds")
x <- as.numeric(test[1,-55])
names = colnames(test)[-55]
attack(x, 0, jags.out, names)
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
test$probability <- NULL
jags.out = readRDS(file = "data/jags1.rds")
x <- as.numeric(test[1,-55])
names = colnames(test)[-55]
attack(x, 0, jags.out, names)
attack(x, 1, jags.out, names)
dim(test)
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
test$probability <- NULL
jags.out = readRDS(file = "data/jags1.rds")
names = colnames(test)[-55]
test$spam[1]
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
test$probability <- NULL
jags.out = readRDS(file = "data/jags1.rds")
names = colnames(test)[-55]
x <- as.numeric(test[1,-55])
test_attacked <- attack(x, test$spam[1], jags.out, names)
for(i in 2:3){
x <- as.numeric(test[i,-55])
x_att <- attack(x, test$spam[i], jags.out, names)
test_attacked <- rbind(test_attacked, x_att)
}
test_attacked
colnames(test_attacked) <- names
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
train = read.csv("data/train1.csv")
test = read.csv("data/test1.csv")
test$probability <- NULL
jags.out = readRDS(file = "data/jags1.rds")
names = colnames(test)[-55]
attack_test_set(test, jags.out, names)
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
for(i in 1:10){
train_path <- paste0('data/train', as.character(i), '.csv')
test_path <-  paste0('data/test', as.character(i), '.csv')
jags_path <-  paste0('data/jags', as.character(i), '.rds')
out_path <-  paste0('data/test_att', as.character(i), '.csv')
###
train = read.csv(train_path)
test = read.csv(test_path)
jags.out = readRDS(file = jags_path)
test$probability <- NULL
names = colnames(test)[-55]
att <- attack_test_set(test, jags.out, names)
write.csv(att, out_path, row.names=FALSE)
}
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
for(i in 1:10){
train_path <- paste0('data/train', as.character(i), '.csv')
test_path <-  paste0('data/test', as.character(i), '.csv')
jags_path <-  paste0('data/jags', as.character(i), '.rds')
out_path <-  paste0('data/test_att', as.character(i), '.csv')
###
train = read.csv(train_path)
test = read.csv(test_path)
jags.out = readRDS(file = jags_path)
test$probability <- NULL
names = colnames(test)[-55]
att <- attack_test_set(test, jags.out, names)
write.csv(att, out_path, row.names=FALSE)
print(i)
}
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
i=1
train_path <- paste0('data/train', as.character(i), '.csv')
test_path <-  paste0('data/test', as.character(i), '.csv')
jags_path <-  paste0('data/jags', as.character(i), '.rds')
out_path <-  paste0('data/test_att', as.character(i), '.csv')
test <- read.csv(test_path)
test_att <- read.csv(out_path)
jags.out <- readRDS(file = jags_path)
head(test)
test$probability <- NULL
head(test_att)
pp <- predict_lr(test, jags_out, nsamp=10000)
jags_out <- readRDS(file = jags_path)
test$probability <- NULL
pp <- predict_lr(test, jags_out, nsamp=10000)
head(test)
test_mat <- att_test_matrix <- model.matrix(spam~.,test)
pp <- predict_lr(test_mat, jags_out, nsamp=10000)
source("utils.R")
accuracy(pp, test$spam)
library(ggplot2)
library(dplyr)
library(R2jags)
source("utils.R")
accuracy(pp, test$spam)
pp
i=1
train_path <- paste0('data/train', as.character(i), '.csv')
test_path <-  paste0('data/test', as.character(i), '.csv')
jags_path <-  paste0('data/jags', as.character(i), '.rds')
out_path <-  paste0('data/test_att', as.character(i), '.csv')
i=1
train_path <- paste0('data/train', as.character(i), '.csv')
test_path <-  paste0('data/test', as.character(i), '.csv')
jags_path <-  paste0('data/jags', as.character(i), '.rds')
out_path <-  paste0('data/test_att', as.character(i), '.csv')
test <- read.csv(test_path)
test_att <- read.csv(out_path)
jags_out <- readRDS(file = jags_path)
accuracy(test$probability, test$spam)
test$probability
test$probability > 0.5
as.numeric(test$probability > 0.5)
test$probability
y_pred <- as.numeric(test$probability > 0.5)
test$spam
test_spam == y_pred
test$spam == y_pred
mean(test$spam == y_pred)
accuracy(test$spam, test$probability)
pp
accuracy(test$spam, pp)
test_mat <- model.matrix(spam~.,test)
prob_clean <- predict_lr(test_mat, jags_out, nsamp=10000)
acc_clean <- accuracy(test$spam, prob_clean)
i=1
train_path <- paste0('data/train', as.character(i), '.csv')
test_path <-  paste0('data/test', as.character(i), '.csv')
jags_path <-  paste0('data/jags', as.character(i), '.rds')
out_path <-  paste0('data/test_att', as.character(i), '.csv')
test <- read.csv(test_path)
test_att <- read.csv(out_path)
jags_out <- readRDS(file = jags_path)
test$probability <- NULL
test_mat <- model.matrix(spam~.,test)
prob_clean <- predict_lr(test_mat, jags_out, nsamp=10000)
acc_clean <- accuracy(test$spam, prob_clean)
acc_clean
test_att_mat <- model.matrix(~.,test_att)
prob_att <- predict_lr(test_att_mat, jags_out, nsamp=10000)
acc_att <- accuracy(test$spam, prob_att)
acc_att
acc_clean <- c()
acc_att <- c()
for(i in 1:10){
train_path <- paste0('data/train', as.character(i), '.csv')
test_path <-  paste0('data/test', as.character(i), '.csv')
jags_path <-  paste0('data/jags', as.character(i), '.rds')
out_path <-  paste0('data/test_att', as.character(i), '.csv')
test <- read.csv(test_path)
test_att <- read.csv(out_path)
jags_out <- readRDS(file = jags_path)
test$probability <- NULL
test_mat <- model.matrix(spam~.,test)
prob_clean <- predict_lr(test_mat, jags_out, nsamp=10000)
acc_clean <- c(acc_clean, accuracy(test$spam, prob_clean))
test_att_mat <- model.matrix(~.,test_att)
prob_att <- predict_lr(test_att_mat, jags_out, nsamp=10000)
acc_att <- c(acc_att, accuracy(test$spam, prob_att))
}
acc_att
mean(acc)
mean(acc_clean)
std(acc_clean)
sd(acc_clean)
sd(acc_clean)/sqrt(10)
mean(acc_att)
sd(acc_att)/sqrt(10)
i = 1
train_path <- paste0('data/train', as.character(i), '.csv')
test_path <-  paste0('data/test', as.character(i), '.csv')
jags_path <-  paste0('data/jags', as.character(i), '.rds')
out_path <-  paste0('data/test_att', as.character(i), '.csv')
test <- read.csv(test_path)
test_att <- read.csv(out_path)
jags_out <- readRDS(file = jags_path)
test$probability <- NULL
data <- read.csv('data/uciData.csv')
dim(data)
mean(data$spam == 1)
prob_att
prob_att[(test$spam == 1)]
prob_clean[(test$spam == 1)]
prob_att[(test$spam == 1)]
prob_att[(test$spam == 1) & (prob_clean > 0.5)]
